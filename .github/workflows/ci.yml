name: CI

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  ci:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # ---------- Backend quality (non-blocking at first) ----------
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install backend dev deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements-dev.txt ]; then
            pip install -r requirements-dev.txt
          else
            pip install flake8 mypy
          fi

      - name: Lint backend (warn-only initially)
        continue-on-error: true
        run: |
          flake8 backend || true
          mypy backend || true

      # ---------- Build images exactly like prod ----------
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build API image
        run: |
          docker build -f docker/Dockerfile.backend -t netscan/api:ci .

      - name: Build Gateway image
        run: |
          docker build -f docker/Dockerfile.gateway -t netscan/gateway:ci .

      # ---------- Smoke test API in a container (SQLite fallback OK) ----------
      - name: Run API container (SQLite)
        run: |
          docker run -d --name api-ci -p 8000:8000 netscan/api:ci
          # wait a bit for startup
          for i in $(seq 1 30); do
            sleep 1
            curl -fsS http://localhost:8000/docs >/dev/null && break || true
          done
          curl -fsSI http://localhost:8000/docs

      - name: Stop API container
        if: always()
        run: docker rm -f api-ci || true

      # ---------- Smoke test Gateway static serve ----------
      - name: Run Gateway container (static)
        run: |
          docker run -d --name gw-ci -p 8080:80 netscan/gateway:ci
          for i in $(seq 1 30); do
            sleep 1
            curl -fsS http://localhost:8080/ >/dev/null && break || true
          done
          curl -fsSI http://localhost:8080/

      - name: Stop Gateway container
        if: always()
        run: docker rm -f gw-ci || true
